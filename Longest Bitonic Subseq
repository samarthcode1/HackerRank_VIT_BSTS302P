import java.util.*;
public class Solution{
    static int[] LIS(int arr[],int n){
        int dp1[]=new int[n];
        for(int i=0;i<n;i++){
            dp1[i]=1;
        }
        for(int i=1;i<n;i++){
            for(int j=0;j<n;j++){
                if(arr[i]>arr[j] && dp1[j]+1>dp1[i]){
                    dp1[i]=dp1[j]+1;
                }
            }
        }
        return dp1;
    }
    static int[] LDS(int arr[],int n){
        int dp2[]=new int[n];
        for(int i=0;i<n;i++){
            dp2[i]=1;
        }
        for(int i=n-2;i>=0;i--){
            for(int j=n-1;j>=0;j--){
                if(arr[i]>arr[j] && dp2[i]<dp2[j]+1){
                    dp2[i]=dp2[j]+1;
                }
            }
        }
        return dp2;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t!=0){
            int n=sc.nextInt();
            int arr[]=new int[n];
            for(int i=0;i<n;i++){
                arr[i]=sc.nextInt();
            }
            int lis[]=LIS(arr,n);
            int lds[]=LDS(arr,n);
            int count=0;
            for(int i=0;i<n;i++){
                int a=lis[i]+lds[i]-1;
                count=Math.max(a,count);
            }
            System.out.println(count);
            t--;
        }
    }
}
